# [ WARNING ]
# - Users: do not edit this file.
# - Edit instead `/etc/optimus-manager/optimus-manager.conf`.
# - This is for reference only.
# - And for fallback defaults.

# [ PREAMBLE ]
# The Optimus technology saves power on laptops by turning off the Nvidia GPU when not in use.
# However, in `optimus-manager`, all power saving features are disabled by default.
# As pretty much every laptop model requires a different method.

# [ PROCEDURE ]
# If you don't care about power, just the best ease and performance, do nothing.
# Otherwise:
# 1) Have an updated live USB around, just in case.
# 2) Make a custom config only with the variables you want to change, including section headers.
# 3) Test the custom config with `optimus-manager --temp-config [FILE]`.
# 4) If it works save it into `/etc/optimus-manager/optimus-manager.conf`.
# 5) Reboot, and if the system no longer boots, use the live USB to revert the config.


[optimus]

startup_mode=nvidia
# - `nvidia` (high performance, high stability, high ease, high power).
# - `integrated` (average performance, high stability, low power).
# - `hybrid` (manual nvidia offloading, flexible power).
# - `auto` (based on battery state).
# - `auto_nvdisplay` (if the display connects directly to the Nvidia GPU).
# Check which GPUs support offloading with `xrandr --listproviders | grep 'NVIDIA'`

startup_auto_extpower_mode=nvidia
startup_auto_battery_mode=integrated
startup_auto_nvdisplay_on_mode=nvidia
startup_auto_nvdisplay_off_mode=integrated

switching=none
# Method used to switch the Nvidia card.
# - `nouveau` loads the `nouveau` module.
# - `bbswitch` powers off the card using the `bbswitch` dependency.
# - `acpi_call` brute forces various ACPI method using the `acpi_call` dependency.
# - `custom` uses `/etc/optimus-manager/nvidia-[enable\disable].sh`
# - `none` uses no external module. Maybe `pci_power_control` below.
# Working ACPI calls are catched at `/var/lib/optimus-manager/acpi_call_string.json`.

pci_power_control=no
# Enables PCI power management in `integrated` mode.
# Ignored while using `switching=acpi_call` or `switching=bbswitch`.

pci_remove=no
# Removes the Nvidia card from the PCI bus.
# May prevent crashes.
# Ignored if `switching=nouveau` or `switching=bbswitch`.

pci_reset=no
# Ensures the card is in a fresh state before reloading the nvidia module.
# May fix hangs with `switching=acpi_call`.
# - `no` does not perform any reset.
# - `function_level` performs a selective light reset.
# - `hot_reset` performs a hardware reset of the PCI bridge. ATTENTION: May stress hardware.

auto_logout=yes
# Automatically log out the current desktop session when switching GPUs.
# If disabled or not supported, GPU switching will apply on next login.
# Supported desktops:
# AwesomeWM, bspwm, Deepin, dwm, GNOME, herbstluftwm, i3, KDE Plasma, LXDE, Openbox, Xfce, Xmonad.


[nvidia]

dynamic_power_management=no
# Allows the card to go into low power if it's not in use.
# Works only in `hybrid`mode.
# Check if supported with `grep "Runtime D3 status" /proc/driver/nvidia/gpus/*/power`
# - `no` disables power management.
# - `coarse` goes into low power if no application is using the Nvidia driver.
# - `fine` goes into low power if apps haven't submitted GPU work for a short period.

dynamic_power_management_memory_threshold=
# Threshold, in megabytes, under which the memory is put in a low-power state.
# As power to the memory is handled separately from the rest of the GPU.
# Works only with `dynamic_power_management=fine`.
# Leave blank for the default (200MB). Values over that are ignored.
# `0` keeps the memory always powered on.

DPI=96
# Runs `xrandr --dpi [DPI]`.
# Blank to omit.

options=
# Separate with comma.
# - `overclocking` enables overclocking in the Nvidia Control Panel. ATTENTION: May stress hardware.
# - `triple_buffer` makes framerate smoother at the expense of lag.

modeset=yes
# Required for Prime Sync, which prevents tearing.

PAT=yes
# Sets `NVreg_UsePageAttributeTable`
# Disabling can cause poor CPU performance.

ignore_abi=no
# Loads the driver with a newer `xorg-server` ABI.

allow_external_gpus=no


[intel]

driver=modesetting
# - `modesetting` uses the built-in kernel driver.
# - `intel` uses `xf86-video-intel`.
# - `hybrid` uses `modesetting` on `nvidia` mode, and `intel` for `integrated` mode.

accel=
# Sets the `AccelMethod` in the Xorg configuration.
# Options: `sna` `xna` `uxa` `none`.
# Leave blank for the default (no option specified).

tearfree=
# Sets `TearFree` in the Xorg configuration.
# Options: `yes` no`.
# Leave blank for the default (no option specified)

DRI=3
# DRI version.
# Options: `3` `2` `0`.
# `0` omits the option.

modeset=yes
# Sets modesetting for the nouveau driver.
# Does not affect the Intel GPU driver.
# Works only with `switching=nouveau`


[amd]

driver=modesetting
# - `modesetting`  uses the built-in kernel driver.
# - `amdgpu` uses `xf86-video-amdgpu`.
# - `hybrid` uses `modesetting` for `nvidia` mode, and `amdgpu` for `integrated` mode.

tearfree=
# Sets `TearFree` in the Xorg configuration.
# Options: `yes` no`.
# Leave blank for the default (no option specified)

DRI=3
# DRI version.
# Options: `3` `2` `0`.
# `0` omits the option.
